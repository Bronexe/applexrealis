require('dotenv').config({ path: '.env.local' });

console.log('üîç VERIFICANDO CONFIGURACI√ìN POST-LOGIN...');
console.log('============================================================');

// 1. Verificar variables de entorno relacionadas con redirecci√≥n
console.log('\n1. üìã VARIABLES DE ENTORNO:');
console.log(`   NEXT_PUBLIC_APP_URL: ${process.env.NEXT_PUBLIC_APP_URL || 'NO CONFIGURADA'}`);
console.log(`   NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL: ${process.env.NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL || 'NO CONFIGURADA'}`);

// 2. Verificar archivos de autenticaci√≥n
const fs = require('fs');
const path = require('path');

console.log('\n2. üìÅ VERIFICANDO ARCHIVOS DE AUTENTICACI√ìN:');

const authFiles = [
  'app/auth/login/page.tsx',
  'app/auth/signup/page.tsx',
  'app/auth/callback/page.tsx'
];

authFiles.forEach(file => {
  if (fs.existsSync(file)) {
    const content = fs.readFileSync(file, 'utf8');
    const hasLocalhost = content.includes('localhost:3000');
    const hasRedirectUrl = content.includes('NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL');
    
    console.log(`   ${file}:`);
    console.log(`     ‚ùå Contiene localhost:3000: ${hasLocalhost}`);
    console.log(`     üîó Usa NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL: ${hasRedirectUrl}`);
    
    if (hasLocalhost) {
      console.log(`     üö® PROBLEMA: Este archivo contiene referencias a localhost`);
    }
  } else {
    console.log(`   ${file}: ‚ùå NO EXISTE`);
  }
});

// 3. Verificar configuraci√≥n de Supabase
console.log('\n3. üîß VERIFICANDO CONFIGURACI√ìN DE SUPABASE:');

const supabaseFiles = [
  'lib/supabase/client.ts',
  'lib/supabase/server.ts',
  'lib/supabase/middleware.ts'
];

supabaseFiles.forEach(file => {
  if (fs.existsSync(file)) {
    const content = fs.readFileSync(file, 'utf8');
    const hasLocalhost = content.includes('localhost:3000');
    
    console.log(`   ${file}:`);
    console.log(`     ‚ùå Contiene localhost:3000: ${hasLocalhost}`);
    
    if (hasLocalhost) {
      console.log(`     üö® PROBLEMA: Este archivo contiene referencias a localhost`);
    }
  } else {
    console.log(`   ${file}: ‚ùå NO EXISTE`);
  }
});

// 4. Verificar middleware
console.log('\n4. üõ°Ô∏è VERIFICANDO MIDDLEWARE:');

if (fs.existsSync('middleware.ts')) {
  const content = fs.readFileSync('middleware.ts', 'utf8');
  const hasLocalhost = content.includes('localhost:3000');
  
  console.log(`   middleware.ts:`);
  console.log(`     ‚ùå Contiene localhost:3000: ${hasLocalhost}`);
  
  if (hasLocalhost) {
    console.log(`     üö® PROBLEMA: Middleware contiene referencias a localhost`);
  }
} else {
  console.log(`   middleware.ts: ‚ùå NO EXISTE`);
}

// 5. Verificar configuraci√≥n de Next.js
console.log('\n5. ‚öôÔ∏è VERIFICANDO CONFIGURACI√ìN DE NEXT.JS:');

if (fs.existsSync('next.config.mjs')) {
  const content = fs.readFileSync('next.config.mjs', 'utf8');
  const hasLocalhost = content.includes('localhost:3000');
  
  console.log(`   next.config.mjs:`);
  console.log(`     ‚ùå Contiene localhost:3000: ${hasLocalhost}`);
  
  if (hasLocalhost) {
    console.log(`     üö® PROBLEMA: Next.js config contiene referencias a localhost`);
  }
} else {
  console.log(`   next.config.mjs: ‚ùå NO EXISTE`);
}

console.log('\n============================================================');
console.log('‚úÖ VERIFICACI√ìN COMPLETADA');

// 6. Resumen de problemas
console.log('\nüéØ RESUMEN DE PROBLEMAS ENCONTRADOS:');

const problems = [];

if (process.env.NEXT_PUBLIC_APP_URL?.includes('localhost:3000')) {
  problems.push('NEXT_PUBLIC_APP_URL est√° configurada para localhost');
}

if (process.env.NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL?.includes('localhost:3000')) {
  problems.push('NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL est√° configurada para localhost');
}

if (problems.length === 0) {
  console.log('   ‚úÖ No se encontraron problemas en las variables de entorno');
} else {
  problems.forEach(problem => {
    console.log(`   ‚ùå ${problem}`);
  });
}

console.log('\nüîß SOLUCIONES RECOMENDADAS:');
console.log('1. Actualizar NEXT_PUBLIC_APP_URL en Vercel a: https://applexrealis.vercel.app');
console.log('2. Actualizar NEXT_PUBLIC_DEV_SUPABASE_REDIRECT_URL en Vercel a: https://applexrealis.vercel.app/dashboard');
console.log('3. Hacer redeploy de la aplicaci√≥n');
console.log('4. Limpiar cache del navegador');
